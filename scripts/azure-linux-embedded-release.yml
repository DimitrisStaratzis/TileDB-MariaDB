steps:
- bash: |
    echo "'uname -s' is:"
    echo "uname: " $(uname)
    echo "uname -m: " $(uname -m)
    echo "uname -r:" $(uname -r)
    echo "uname -s: " $(uname -s)
    echo "uname -v: " $(uname -v)
    printenv
  displayName: 'Print env'

- bash: |
    # DELETEME work-around for https://github.com/microsoft/azure-pipelines-image-generation/issues/969
    sudo chown root.root /

    # Azure sets "SYSTEM=build" for unknown reasonas, which breaks the OpenSSL configure script
    #   - openssl configure uses ENV{SYSTEM} if available:
    #     https://github.com/openssl/openssl/blob/6d745d740d37d680ff696486218b650512bbbbc6/config#L56
    #   - error description:
    #     https://developercommunity.visualstudio.com/content/problem/602584/openssl-build-error-when-using-pipelines.htm
    unset SYSTEM

    # azure bash does not treat intermediate failure as error
    # https://github.com/Microsoft/azure-pipelines-yaml/issues/135
    set -e pipefail

    git config --global user.name 'Azure Pipeline'
    git config --global user.email 'no-reply@tiledb.io'

    source ./scripts/build_embedded_release.sh

    # copy results to binaries dir for archiving
    cp -r embedded-package/rel ${BUILD_BINARIESDIRECTORY}

  displayName: 'Build MyTile embedded libraries'

- script: |
      echo $sourceVersion
      commitHash=${sourceVersion:0:7}
      echo $commitHash
      echo "##vso[task.setvariable variable=commitHash]$commitHash" ## Set variable for using in other tasks.
  env: { sourceVersion: $(Build.SourceVersion) }
  displayName: Git Hash 7-digit

# Archive files
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: false
    archiveType: 'tar'
    tarCompression: 'gz'
    archiveFile: $(Build.ArtifactStagingDirectory)/mytile-embedded-$(ARTIFACT_OS)-$(Build.SourceBranchName)-$(commitHash).tar.gz
    replaceExistingArchive: true
    verbose: true
  condition: succeeded()

# Publish artifact
- task: PublishBuildArtifacts@1
  inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/mytile-embedded-$(ARTIFACT_OS)-$(Build.SourceBranchName)-$(commitHash).tar.gz'
      artifactName: '$(ARTIFACT_EXTRAS)'
  condition: succeeded()
